CSS
day-1

프론트엔드: 사용자 화면을 다루게 될 웹애플리케이션을 개발 (GUI)
		브라우저에서 실행
백엔드: 사용자 요청을 받아서 처리할 기능을 구현

http
https <- security 추가됨

사용자가 브라우저를 통해 요청을 보내면 서버는 처리를 통해 응답을 함
< 요청-응답 >

정적 사이트: 요청, 응답 ...(웹서버를 통해 항상같은것을 보여줌) -css, html, js (프엔)
동적사이트 : 요청, 서버-DB-응답 - jsp


19일 시험

정적사이트  참고 
https://www.ncdinos.com/

야후 - 헤더 사용 
네이버 ... 한국 div 많이씀 
class - > 묶어서 꾸미기 위해 영역 구분..


main에서 일반적으로 height는 잘 안줌


-포터 수정시
1. 포트 수정 파일

.vscode 폴더 생성 - settings.json 파일 생성
{
    "LiverServer.settings.port" : 5500
}
2.  설정-live server 검색 - use local IP 항목 체크 ->프로그램 종료 후 재시작



컨트롤+엔터 -> 다음줄의 처음으로 넘어감

 p태그는 화면의 길이에 따라 달라짐
가능한 줄바꿈보다는 p태그를 사용함..


검사
user agent stylesheet - agent : 크롬


ul { list-style-type: disc;} : 동그라미 


html 학습 사이트
1. https://www.w3schools.com/html/html_basic.asp (연습)
2. https://developer.mozilla.org/ko/docs/Web (이론 - 한글번역이기에.. )
3. https://www.javatpoint.com/ (추가예제)

색상사이트
https://htmlcolorcodes.com/
https://www.w3schools.com/html/html_colors_hsl.asp

이미지 저장을 위해선 img 태그를 써야만 가능 ->크기 지정해줘야함
background-image .. 못가져감   ->  div class 안에서 사용... 지정안해줘도 됨


ctrl+shift+p - emmet -wrap .. 드래그한 범위만큼을 감쌀 수 있음
<!-- main 또는 div 태그는 레이아웃(영역의 위치)을 설정하기 위해 컨테이너 역할을 함

letter-spacing:-0.05rem;  -글자간격
word-spacing: 1.5rem; 띄어쓰기 간격
단위 rem
폰트 weight 최대 900
페이지에서 검사-> 해당 부분 선택- 옵션 바로 바꿀 수 있음 -> 저장이되지는 않음 테스트용임




### css 적용하는 방법

1. 태그의 style 속성으로 정의하기 (인라인 스타일)
스타일 속성이름: 속성값 한 쌍으로 여러개 설정 가능, ; 으로 구분
 <h3 style="color: blue; font-weight: 900;">태그와 요소</h3>

2. html 문서의 <style> ... </style> 태그 안에서 정의 하기 (내부 스타일 시트)

3. css 만 모아 놓은 파일을 생성하여(확장자 css) html 의 link 태그에서 파일의 주소를 정의하기(외부 스타일 시트)
<link rel="stylesheet" href="style.css">


2,3번은 대상자를 정해야함 
    - 단, 인라인 스타일은 선택자를 지정할 필요는 없습니다. 






<!DOCTYPE html>
<!-- lang은 태그의 속성: 웹페이지(웹문서)가 어떤 언어로 만들어졌는지 정보를 설정 
    필수속성은 아님, 웹접근성을 위한 속성-->
<html lang="en">
    <!-- 웹페이지의 설정 정보 -->
    <head>
        <!-- euc-kr 인코딩은 국산. 지금은 대부분 UTF-8 -->
        <meta charset="UTF-8">
        <!-- 아래 meta내용은 모바일 기기를 위한 설정입니다. 없어도 됨
            반응형 웹페이지를 제작할때 설정함
        -->
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>0_START</title>
    </head>

    <body>
    
</body>
</html>


<!-- 요소: 기본적인 데이터
     태그는 여러 요소를 지닐 수 있음 -->
<!-- ! : 맨 처음 빈 상태일때 누르면 기본형식이 생성됨 -->
<!-- crtl+/ : 주석 -->
<!--  라이브 서버 누르면 html(브라우저) 창으로 뜸
    html의 아이콘: 파비콘 (favicon)
    주소(URL): 로컬호스트 ip - http://localhost:5500/  = http://127.0.0.1:5500/day1/0_start.html 
              구성: http - 프로토콜(프로토콜 구분기호  ://),  127.0.0.1 - 서버주소, 5500- 포트주소
                        day1 - 하위폴더, 요청웹페이지 파일명 - 0_start.html  나머지는 기호- / 는 구분기호
                    

--css

     /* div 블록 요소에 크기를 정함 - 외부여백,내부여백, 너비 ,높이 */
        div{
            border: 1px solid rgb(210, 91, 91);
            margin: 3rem;
            padding: 3rem;
            /* 20 x16 = 320 */
            width: 20rem;
            height: 10rem;
            /* 결론: 화면에 보이는 사각형의 크기는 width(height)+내부여백*2+테두리*2 */
        }
        /* class 이름을 선택자로 사용. class 이름은 child1이고 기호 . 으로 표시 */
        div.child1{
            /* width, height를 지정할 때 내부여백과 테두리가 포함됨 */
            box-sizing: border-box;
        }
        /* main 의 컨테츠를 적절하게 보이도록 크기와 여백을 정하기 */
        main {
            width: 50rem;
            box-sizing: border-box;
            background-color: rgb(156, 246, 223);
            padding: 2rem;
            /* 테두리 '굵기', '모양', ' 색상'을 순서대로 정함 */
            border-top: 4px dotted red;
            border-bottom: 4px solid gray;
            margin: 1rem 2rem 3rem 4rem;
            /* 4가지 위치에 따라 값을 설정하는 border, padding, margin은 4개의 값을 위부터 시계방향으로 모두 설정
            혹은 2개의 값으로 위&아래, 양 옆 설정, 1개의 값이면 모두 같은 값
             */
        }
        div.child2{
            box-sizing: border-box;
            width: 30rem;
            height: 30rem;
            padding: 2rem 4rem 6rem;
            /* 값이 없으면 맞은편을 따라함 */
            border: 2px solid black; 
        }
    </style>
</head>
<body>
    <main>
        <h3>
            블록요소 CSS
        </h3>
        <p>너비 , 높이를 설정할 수 있음. 지정 단위는 주로 px, rem, em, %..
            이 중 px, rem은 html 요소를 절대 값으로. em, %는 바로 윗단계 상위태그를 기준으로하는 상대값 (보통 글꼴 크기, 색상..)
        </p>
        </main>
        <div>1</div>
        <div class="child1">2</div>
        <div class="child2">3</div>
        <!-- 블록요소를 화면 가로 중앙에 배치할떄, auto 설정함 -->
   
        <main style="margin: auto;">
            <h3>
                블록요소 CSS
            </h3>
            <p>너비 , 높이를 설정할 수 있음. 지정 단위는 주로 px, rem, em, %..
                이 중 px, rem은 html 요소를 절대 값으로. em, %는 바로 윗단계 상위태그를 기준으로하는 상대값 (보통 글꼴 크기, 색상..)
            </p>
        </main>
        <!-- 단위는 절대값으로 px 써도 됨. 단, 단위값을 줄이려면 rem이 편함 -->
    


--포지션
<style>
        html{
            /* 16px X 0.625 = 10px = 1rem ->너비와 높이 계산 편하게 하기 위함 */
            font-size: 62.5%;

        }
        /* 모든 요소에 적용할 스타일 선택자는 *(와일드 카드 문자) */
        *{
            box-sizing: border-box;
        }
        body{
            /* 글씨크기 16px */
            font-size: 1.6rem;
        }
        div{
            box-sizing: border-box;
            border: 2px dotted green;
            margin: 2rem;
            width: 10rem;
            height: 12rem;
        }
        /* 선택자: class 이름 사용.  모든 child 요소에 적용 */
        .child{
            width: 8rem;
            height: 8rem;
            padding: 1rem;
            margin: 1rem;
        }
        .child_realtive{
            /* 현재 위치에서 좌표 이동할 수 있음. 좌표값은 top-left */
            position: relative;
            top:2rem;
            left: 2rem;
            border: 1px solid brown;
        }
        .child_absolute{
            /* 제일 위. 
            top,left는 브라우저 화면 맨 왼쪽위가 0
            top: 세로, letf: 가로 방향으로 값이 증가
            스크롤하면 화면에서 없어짐 */

            position: absolute;
            top:2rem;
            left: 2rem;
            border: 1px solid rgb(42, 54, 165);
            background-color: beige;
        }
        /* 스크롤하면 화면 속 같은 위치에 고정됨 */
        .child_fixed{
            position: fixed;
            top:2rem;
            left: 2rem;
            border: 1px solid rgb(94, 251, 217);
            background-color: rgb(237, 237, 51);
        }
    </style>
</head>
<body>
    <h3>positon</h3>
    <p>
        웹문서 상에서 요소를 배치할때 기존 흐름과 다르게 할 수 있는 속성이 있음
    </p>
    <div>
        <div class = "child">abcde abcde</div>
    </div>
    <div>
        <!-- 클래스 이름을 여러가지 나열해서 적용시킬 수 있음 -->
        <div class = "child child_realtive">abcde</div>
    </div>
    <div>
        <div class="child child_absolute">abcde</div>
    </div>
    <div>
        <div class="child child_fixed">abcde</div>
    </div>

-a태그
<h3>A (anchor) 태그</h3>
    <p>HTML: HyperText Markup Language<br>
       Hypertext: 웹페이지를 넘나들며 화면을 바꿀 수 있는 방식으로 동작 <br>
       a 태그는 href 속성값을 설정하여 이동할 웹페이지를 지정하고 화면을 바꿈<br>
    </p>
    <ul>
        <li>
            <a href="https://www.naver.com" target="_blank">네이버</a>
        </li>
        <li>
            <a href="https://www.google.com" target="_blank">구글</a>
        </li>
        <li>
            <a href="http://127.0.0.1:5500/day1/5_position.html">5_position.html(전체주소)</a>
        </li>
        <li>
            <!-- 위의 전체 주소는 현재 페이지의 http://127.0.0.1:5500/day1/6_anchor.html와 같은 서버와 포트주소를 사용하므로
                 이부분은 생략하고 표기함 (상대주소)-->
            <a href="5_position.html">5_position.html(파일명)</a><br>
            <!-- 현재 폴더 day1의 부모로 가기 : ..
                test는 day1의 형제
            그리고 test 폴더로 가서 anchorTest.html열기 
            http://127.0.0.1:5500/day1/test/anchorTest.html(절대주소)-->
            <a href="test/anchorTest.html">anchorTest.html Go!</a>
                <!-- 부모폴더: ../
                     현재폴더: ./
                     자식폴더: 폴더명/ 파일명 -->
        </li>


    </ul>
























------------
md
- 정적 사이트 : 방문자에게 미리 저장된 정보만을 보여 주기만 하는 웹사이트
				웹서버가 브라우저(사용자) 요청에 대해 원하는 웹페이지를 바로 응답 보냄
- 동적 사이트 : 예매, 쇼핑몰, SNS와 같이 서비스를 제공하며 사용자와 상호작용을 하는 웹사이트
				브라우저(사용자)가 원하는 정보를 조회하기 위해 요청에 대한 조회를 DB에서 함
				JSP와 같은 백엔드 언어로 처리하여 응답 데이터를 만들어 웹서버에게 전달

*프론트엔드 진도: 정적 사이트와 관련된 html, css, js 학습				

- 서버 : 인터넷을 통해 텍스트,이미지,동영상 등의 여러 정보를 사용자에게 제공해 주는 컴퓨터
	*실제 서버구축은 JSP에서 함. 확장프로그램 live server로 서버 사용 예정

- 클라이언트 : 서버에 접속하여 정보를 요청하고 제공받는 사용자 기기 또는 프로그램


- 웹브라우저 : 웹사이트 방문에 사용되는 프로그램. 구글의 크롬, 마이크로소프트의 엣지, 모질라의 파이어폭스 등이 있습니다.
	     

- 프론트엔드 개발 : front-end 단어의 의미와 같이 클라이언트 프로그램으로 사용되는 웹 브라우저 화면의 모양과 기능을 다루는 분야
		HTML, CSS, 자바스크립트 언어를 사용하여 개발합니다.
- 백엔드 개발 : back-end 단어의 의미와 같이 사용자에게 보이는 화면 뒤의 기능을 담당합니다. 데이터베이스에서 데이터를 조회하거나 
	      저장하는 등의 데이터 처리 영역 입니다. 자바, 파이썬 등의 다양한 프로그래밍 언어를 사용하여 개발합니다.

- HTML : 웹 브라우저에서 보이는 하나의 화면을 웹페이지 또는 웹문서라고 합니다. 이 웹문서의 구조와 형식을 다루는 언어 입니다.
           모든 웹문서는 HTML 형식을 따라야 합니다.
- CSS : HTML 로 작성한 웹문서의 내용을 배치하고 디자인 요소들을 적용하는 적용합니다.
- 자바스크립트 (JS) : HTML과 CSS 는 미리 저장된 내용으로 정적인 웹문서를 보여줍니다. 자바스크립트는 웹브라우저의 엔진으로 
	컴파일되고 실행되는 언어입니다. 자바스크립트를 이용하면 사용자 클릭과 같은 동작에 반응하며 웹문서를 동적으로 보여줍니다.
- 프레임워크 : 프로그램 개발에 자주 사용되는 핵심 기능을 미리 구현한 라이브러리 입니다. 백엔드 및 프론트 개발 언어들은
            많은 프레임워크들을 사용하여 프로그램 개발을 합니다.

- 자바스크립트 프레임워크 : 	
	JQuery 는 HTML 과 CSS 웹 요소의 조작을 쉽게할 수 있습니다.
	node.js 는 백엔드 개발에 사용됩니다.
	최근에는 리엑트(react) , 뷰(Vue) , 앵귤러(Angular)  등이 사용자 인터페이스 개발에 많이 사용되고 있습니다.

- 개발 도구 : 메모장, 이클립스 , vs code 등 다양한 도구를 사용할 수 있습니다.
  
 	
## HTML 기본 형식

<태그이름>  </태그이름> 으로 시작과 끝을 표시하며 특정 형식을 갖는 하나의 요소를 나타냅니다.
		    요소는 속성을 갖습니다. 속성 값에 따라 다른 모양으로 표시되거나 기능을 갖게 됩니다. 
		    style 속성으로 디자인 특성을 설정 할 수 있습니다.	

: HTML5 버전 표시

	<!DOCTYPE html>


: 웹문서의 시작 ~ 끝.  다음 요소들을 포함합니다.

	<html>  </html>   


### head 요소 

	<head>   </head>  
	
:  웹브라우저가 웹 문서를 해석하고 처리하는데 필요한 정보들을 설정합니다. 다음 요소들을 포함합니다.

1)   ```<meta charset="UTF-8">```
		
     : 메타정보는 웹브라우저에 직접 보이지 않고 웹문서에 필요한 정보를 설정합니다. __charset="UTF-8"__ 은 charset 속성의 값 UTF-8 으로 웹문서의 인코딩 설정합니다.
		 
2) ```<title>Document</title>```

   : 웹브라우저에 표시되는 웹문서의 제목입니다.

### body 요소

	 <body>   </body>  

 : 웹브라우저 화면에 표시되는 웹문서의 내용을 작성하는 요소 입니다. 하나의 body 만 존재하며 아래와 같은 태그로 내용을 작성합니다. 아래의  태그들은 브라우저에서 보여지는 기본 모양이 있습니다.
 (사용자 에이전트 스타일 시트)
	    

1) `<h1> </h1>  , <h2> </h2> , <h3> </h3> , <h4> </h4> , <h5> </h5> , <h6> </h6> `  
   : h1이 가장 큰제목, h6이 가장 작은 제목이다.

2) `<p>  </p>` : 단락.(문단)

3) `<strong> </strong>` : 글꼴 모양 굵게   
4) `<b>  </b>` :  (스크린리더 경고/주의)  

5) `<em>  </em>` : (강조)   
6) `<i> </i>` : (관용구)     

7) `<u> </u>` : 밑줄
8) 기타 글모양: 취소선 `<s> </s>` 위첨자  `<sup> </sup>` 아래첨자 `<sub> </sub>` 작은 글꼴(부가정보) `<small> </small>`
9) `<ol>  </ol>` : 순서 있는 목록. 태그 안에  여러개 `<li> </li>` 를 갖습니다.   숫자 찍힘
   - __type__ 속성 = "1" 또는 "a" , "A" , "i" , "I" 로 순서 표시 방법 설정합니다. 

10) `<ul>  </ul>` : 순서 없는 목록. 태그 안에 여러개 `<li> </li>`를 갖습니다.   동그라미 점 찍힘 
    - __list-style-type__  css 속성 = "square" , "circle" , "disc" , "none"으로 모양 설정 합니다.   		
	
11) 설명 목록  `<dl> </dl>` 태그 안에 `<dt></dt>`(제목) 와 `<dd></dd>`(내용) 한쌍을 갖습니다.
	    
12) 표 : `<table> </table>` 태그 안에 여러개의 `<tr> </tr>` (행) 을 갖습니다.  

    - `<tr> </tr>` 태그 안에도 여러개의 `<td> </td>`(열,셀) 태그를 갖습니다.  제목 열(셀)은 `<th> </th>`로 하면 굵은 글꼴로 표시됩니다.
	- td 또는 th 태그의 __rowspan__ 또는 __colspan__ 속성 = "합칠 셀의 개수"를 지정합니다.
	- `<caption> </caption>` 은 표의 제목을 표시합니다.(선택사항)
	- css 또는 자바스크립트에서 사용할 목적으로
	제목(머릿말)은 `<thead> </thead>` , 본문은 `<tbody> </tbody>` ,  요약(꼬리말) `<tfoot> </tfoot>` 안에 tr 태그를 포함시킵니다.
	- `<colgroup> </colgroup>` 태그 안에 `<col>` 은 각 열 단위로 css 를 적용할 때 사용합니다.
	    
13) 멀티미디어 파일 삽입 :  

  - 그림은  `<img>` __src__ 속성="이미지 경로와파일명" , width(너비) 와 height(높이) 속성 = "크기값" 을 설정합니다       
  - 오디오,비디오 파일은 `<object> </object>` 태그의 data 속성 또는 `<embed>` 태그의 src 속성으로 설정합니다.  
 
14) ****하이퍼링크  `<a> </a>`  __href__ 속성="링크주소" 를 설정하여 다른 웹문서로 이동합니다. 

  - __target__="_blank" 속성은 새 탭에서 열리도록 합니다.

15) ** `<div> </div>`  또는 `<span> </span>` 는 주로 디자인 목적으로 영역을 설정합니다.

16) ** 시맨틱 태그 : 위의 태그들은 특정 기능을 갖고 있으나 시맨틱 태그는 기능이 없이 웹문서의 구조를 파악하는 의미를 표시합니다.

	`<header> </header>`  : 헤더 영역(머릿말)  
	`<main> </main>` :  본문 영역. 핵심적인 내용 포함   
	`<footer> </footer>` : 푸터 영역(꼬릿말)  
    `<nav> </nav>` :  네비게이션(메뉴) 영역.  
    `<article> </article>` 주요 콘텐츠가 아닌 독립적 또는 부가적인 내용 포함.   
	`<section> </section>` : 주요 컨텐츠를 분리해서 묶기  					   
	`<aside> </aside>` : 사이드바

참고: 시맨틱 태그와 div 태그를 혼용하여 레이아웃 만듬

	-외국에서 자주 씀 : article, section
	-한국: main, footer
	   
17) ** 사용자 입력 양식

    `<form> </form>` 안에 사용자 입력 양식을 작성합니다.(백엔드 개발시 JSP 와 함께 사용되어 매우 중요합니다.)

	`<input>` 은 __type__ 속성= __"text", "password", "radio", "checkbox" , "number", "date" , "file" , "hidden"__ 등 입력 형태 설정 합니다.
	
	`<textarea> </texarea>` 는 다중 행 텍스트 입력  
	`<select> </select>` 태그 안에 여러 개 `<option> </option>` 포함합니다. 드롭다운 선택 태그  
	`<button> </button>` 버튼 태그. 사용자가 버튼을 클릭하면 지정된 동작을 실행하도록 합니다.  
	  - __type__ 속성="submit" 또는 "button" 이 있습니다.

	  - `submit` 은 form 태그안의 모든 사용자 입력을 서버로 전송합니다.`button` 은 주로 자바스크립트가 요청 기능을 실행할 때 사용합니다.
		
	`<label> </label>` 입력 요소에 제목을 붙일 때 사용합니다. for 속성값을 정하여 특정(id속성값이 같은) input 요소와 연결된 동작을 시킵니다.


	<!-- 참고 -->
	`<fieldset> </fieldset>` 은 form 태그 안에서 입력 요소를 그룹화 합니다. `<legend> </legend>` 태그로 fieldset의 제목을 표시합니다.

###태그의 중요한 분류!!!!!
+블록(block) 요소 : 태그 요소가 줄바꿈이 됨. 
	스타일(css)에서 너비와 높이 설정 가능
		기본 너비는 화면의 100%, 영역에 외부여백, 내부여백, 테두리 선을 포함
		기본 높이는 contents(내용)에 따라 자동설정(아무것도 없으면 0, 있으면 내용에 따라..)
		태그에 따라 기본 값이 다름(user agent styles)
	div, h1~h6, ul, ol, li, table, form, hr
	레이아웃과 관련된 시멘틱 태그(header, main, nav, footer..)
	블록 요소를 inline-block 요소로 바꿀 수 있음(display 속성)

+인라인(inline) 요소: 태그 요소로 줄바꿈이 안됩니다. 같은 줄로 다음 요소를 배치
	기본적으로 너비와 높이를 줄 수 없음. 단, 블록 요소로 변경 가능(display 속성)
	strong, em, i.. 글꼴 관련
	span, image, a, 
	form 양식에 쓰이는 입력 태그: input, select, button,label .. 

--
## CSS

+ html 은 웹페이지의 내용과 그것이 표시될 형식이며
+ css는 html 문서에 적용할 글꼴,색상,정렬, 각 요소의 배치와 같은 디자인 특성을 정의합니다. 
+ 내용과 디자인 작업이 분리되어 웹페이지의 내용을 작성한 html 에 여러 형태의 디자인을 적용하는 것을 쉽게 할 수 있습니다.
+ css 는 반응형 웹디자인을 가능하게 합니다. PC 또는 모바일 기기에 맞는 화면을 각각 만드는 것이
아니라 웹페이지가 보여지는 브라우저의 크기에 따라 자동으로 배치를 바꾸어 줄 수 있습니다.
+ cascade style sheet : html 문서에 적용되는 스타일을 모아 놓은 파일
  
  - style : 문서의 시각적인 디자인 요소들을 정의한 것. 속성과 값으로 규칙을 정의합니다.
  - sheet : 스타일 정의(규칙)을 모아놓은  파일. html 하나에 여러 css 파일을 사용할 수 있습니다.
  - cascade : 위로 부터 `계단식`으로 행하다. html 문서를 구성하는 요소의 부모-자식 관계에 따라 지정 될 수 있으며 또는 우선순위를 갖고 적용 됩니다.


## CSS 형식 
   - html 의 태그에 대해 브라우저가 기본적으로 표시하는 스타일 외에 제작자 스타일을 만드는 형식입니다.
   - 제작자가 정의한 스타일은 브라우저의 기본 스타일을 바꿉니다.
```
      선택자 { 
         속성1 : 속성1의 값;  
         속성2 : 속성2의 값;
            :
         속성n : 속성n의 값;
      } 
```
   - 선택자는 정의한 스타일이 적용될 태그 요소를 지정합니다. 태그이름 등 여러가지 방법을 사용합니다.
   - 속성이름과 그 속성값이 하나의 쌍으로 이루어집니다.
   - 다양한 속성이 어떻게 디자인 결과를 만드는지 학습합니다.

### css 적용하는 방법

	1. 태그의 style 속성으로 정의하기 (인라인 스타일)
	2. html 문서의 <style> ... </style> 태그 안에서 정의 하기 (내부 스타일 시트)
	3. css 만 모아 놓은 파일을 생성하여(확장자 css) html 의 link 태그에서 파일의 주소를 정의하기(외부 스타일 시트)
    
    - 단, 인라인 스타일은 선택자를 지정할 필요는 없습니다. 

### 선택자
  
   - 태그명 : 타입 선택자라고 하며 해당 태그 이름을 갖는 모든 요소에 정의한 스타일이 동일하게 여러번 적용됩니다.  태그이름 한 개 또는 여러개를 나열할 수 있습니다. 
   - 클래스 이름
          - class 속성과 값(이름)을 태그요소에 설정합니다. 해당 클래스 이름을 갖는 모든 요소에는 정의한 스타일이 동일하게 여러번 적용됩니다.
          - 선택자를 class 이름으로 할 때에는 기호 . (마침표)  를 붙입니다.        
   - 아이디 이름
          - id 속성과 값(이름)을 태그요소에 설정합니다. 해당 id 이름을 갖는 요소에는 정의한 스타일이 적용됩니다.
          - 아이디는 식별값이므로 한 개 요소에 한번만 적용됩니다.  
          - 선택자를 id 이름으로 할 때에는 기호 # (마침표)  를 붙입니다.
   - 와일드 카드 문자  *
          - 모든 요소에 적용되는 선택자 입니다.

   - 특수문자 : 웹 문서의 요소(태그)들은 포함 관계가 있으며 이 때 자식 요소, 자손 요소 등의 관계를 선택자에 표시 할 수 있습니다.                 


#### 스타일의 우선 순위

   - 태그 요소 하나에 여러가지 정의된 스타일이 충돌될 때의 우선 순위

1.  !important   <-최우선순위>
2.  인라인 스타일
3.  id 스타일
4.  class 스타일
5.  타입(tag) 스타일

   - 동일한 우선 순위로 여러개의 스타일이 정의되어 있으면 소스 코드 작성 순서가 나중에 작성된 것이 적용됩니다.

+ 스타일 상속

   -  웹 문서의 요소(태그)들이 <X> <Y> </Y>  </X>  와 같은 포함 관계가 있을 때 , X는 부모 요소 Y는 자식 요소 입니다.
   -  자식 요소가 별도의 스타일을 정의 하지 않으면 부모 요소의 스타일이 자식 요소에게 전달(상속)되는 스타일 속성이 있습니다.
      : 글꼴 크기 , 색상

#### 크기 지정 단위
글자 크기, 영역의 너비와 높이 , 영역의 내부 여백과 외부 여백 등에 사용 됩니다.

   - __pt__ : 포인트. 일반 문서 편집 프로그램에서 사용.
   - px : 픽셀. 모니터 해상도의 1px 
   - __rem__ : 웹 문서의 html 요소에서 지정한 크기를 1rem 으로 기준하여 비율을 지정하는 상대 크기. 1rem = 16px , 12pt  (크롬)
   - __em__ : 부모 요소에서 지정한 글꼴 크기를 1em 으로 기준하여 비율을 지정하는 상대크기. 
   - % : 부모 요소의 크기를 기준으로 계산하여 비율을 지정하는 상대크기

### 색상 지정 
글자 , 테두리 선, 바탕색 등의 색상 설정 값을 표현하는 방법은 red 0~255 , green 0~255 , blue 0~255 사이의 값들을 조합하여 생성됩니다.

   - 색상 조합은 https://htmlcolorcodes.com/ 를 참고하세요.
   - 16진수로 표현하기 : 10진수 255는 16진수 ff 입니다. 
   3가지 색상을 순서대로 #rrggbb(rr은 빨강, gg는 초록, bb는 파랑 16진수 2자리) 로 지정합니다. 
     + #ffffff 는 흰색, #000000 은 검정색 입니다.
     + #ff0000 은 파랑, #00ff00 은 초록, #0000ff는 파랑색입니다.
   - 색상이름 black, blue,yellow, red ,white 와 같이 대표색상은 이름을 사용할 수 있습니다.
   - rgb(빨강, 초록, 파랑) 함수로 빨강, 초록, 파랑의 10진수 값을 지정합니다.
   - rgb(빨강, 초록, 파랑,불투명도) 함수로 값을 지정합니다. 불투명도는 0 ~ 1 사이의 값이며 1은 불투명, 0에 가까울 수록 투명해집니다.
   - hsl(색상,채도,명도) 함수로 값을 지정합니다.  참고: https://www.w3schools.com/html/html_colors_hsl.asp
   

#### 텍스트 스타일

+ 모양
   - `font-famly` : 글꼴
   - `font-size` : 글자 크기
   - `font-style` : italic 이탤릭체 설정
   - `font-weight` : 글자 굵기. bold 또는 100,200,300,...900 으로 굵기 지정(최대 900). 일반적인 regular 는 400

+ 정렬 `text-align`
   -  속성 값 : left , right , center   

+ 줄 간격 `line-height`
   - 24px (절대값), 2 또는 200% (상대값.글자크기에 대한 배수)
   - height 와 line-height 를 같게 하면 텍스트를 세로로 쉽게 정렬할 수 있습니다.

+ 대소문자 변환 `text-transform `

   - 속성 값 : capitalize , uppercase , lowercase 

+ 글자 간격 `letter-spacing` 글자간격, `word-spacing`   띄어쓰기 간격
단위 rem






