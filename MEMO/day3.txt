블로그 기록 시 하나의 주제를 정해놓고 누군가에게 가르쳐주기 위한 거처럼 정리, 집중적으로 예시찾아가며 깔끔하게...
비전공자입장에서 할거야->비전공자입장에선 이게 어려웟다 전문자들은 어떻게하더라하면서 전문적인 내용까지 다룰 수 있도록..

양보다 질로
벨로그 velog.io


보안쪽에서 js 더 주요하게 봐야하게 됨.. 컴파일러가 브라우저이기에 심어놓은거찾아내기위해..




- form은 사용자 입력 양식을 만듬. 
        사용자가 입력한 값을 구분하기 위한 식별자 'name' 속성   - 중요
        사용자가 입력한 유형은 type 속성(화면에 표시되는 방법)
        사용자가 입력한 값은 value 속성 - 기본값을 줄 수도, 안줄 수도 있음.
        서버로 전송되는 url에 표시는 ? 속성 이름=값 / ?name = value
? 뒤의 입력값 정보를 query string(조회 문자열) 또는 입력 파라미터라 부름
    


input type text, number ...

-button
    <form action="success.html">
        <input type="text" name ="search">
        <input type="text" name ="search" value="item">

        <!-- button은 1. form 태그 안/ 밖   2.안에 있을때는 type이 submit이냐 button이냐 -->
        <!-- button 태그가 form안에 있을때 type이 생략되면 submit(제출- 서버로 데이터를 보내는 동작)으로 설정 -->
        <button>전송</button>
        <!-- type이 button일때는 자바스크립트 명령을 실행 -->
        <button type="button">검색</button>

        <!-- 오래된 형식 -->
        <input type="button" value="테스트">


    </form> 

    <button>form태그 밖에 있는 버튼</button>
</body>
<!--실행 결과: 입력요소에 아무 문자열이나 입력 후 전송 버튼클릭시 success.html로 페이지가 이동됨
    입력문자열이 영어인 경우
     http://127.0.0.1:5500/day3_form/success.html?search=english
    한글을 서버로 전송하는 경우 ->한글은 url에서 utf-8인코딩된 값으로 전달됨 (%EA = 1bye 16진수값.. 3개가 모여야 한글 1개가 됨)
    http://127.0.0.1:5500/day3_form/success.html?search=%EA%B0%80%EB%82%98%EB%8B%A4%EB%9D%BC

    'action' 속성 값은 데이터를 전달받을 url(백엔드주소)
    html 파일은 정적페이지. 데이터 처리할 기능 X
    웹 애플리케이션 서버단에서 데이터를 처리할 수 있는 jsp로 바뀌어야함


   <input type="number" name="quntity" placeholder="수량 입력하세요">
placeholder = 안쪽에 글씨로 보임


jsp에서는 form 태그의 method 속성값을 post(저장)로 하면 사용자가 입력한 값이 url에 안보임
    지금은 method 속성의 기본값 ->get (조회)
    결론: form의 주요속성: action, method
    input: type , name, value -->



--option = 스크롤 선택창
-form 내부에서/ 드롭다운 메뉴
	<select name="location">
            <option value="seoul">서울</option>
            !-- 선택 항목에 대한 value를 생략하면 option 태그의 내용 문자열을 기본값으로 받음 
            <option selected>경기</option>
            !-- selected 속성: 기본 선택값을 지정
            <option>인천</option>
            <option>춘천</option>
            <option>대전</option>
        </select>
스크롤 선택창을 만들 수 있음


--radio  = 동그라미 선택창
<!-- 여러개 중 하나 선택하기 위해 name 값을 다 같게 함(그룹화-반드시 하나 선택), value는 생략하지 않고 선택에 대한 값 지정필수 -->
        <input type="radio" name="location" value="seoul">서울

<form action="success.html">
<input type="radio" name="location" value="incheon" checked>인천
checked - default 설정






-- 체크박스: 선택 필수 x, 다중 선택 가능한 경우
        예: 관심 물품을 선택하는 요소.. -->
        <form action="success.html">
            <input type="checkbox" name="favorite" value="의류"> 의류
            <input type="checkbox" name="favorite" value="스포츠용품"> 스포츠용품
            <input type="checkbox" name="favorite" value="식료품"> 식료품
            <input type="checkbox" name="favorite" value="잡화"> 잡화
            <input type="checkbox" name="favorite" value="전자제품"> 전자제품
            <button>주문</button>
        </form>


꼭 값을 받아야할떄 - radio
선택사항 - checkbox

-label

        <form action="success.html">
            <input type="text" name="userid" id ="" placeholder="아이디를 입력하세요">
            <input type="password" name="password" id ="" placeholder="비밀번호를 입력하세요">
            <!-- type과 name은 달라도 됨, 상관없음 -->
            <!-- 포커스를 갖도록 하기 위해 id 속성 값과 for속성값을 동일하게 함 
                id 속성값은 유일한 값
                복습: class 속성값은 동일한 경우 모두(여러개)를 처리함(css)
                        id 속성값은 하나의 요소만 처리할 때 사용, 동일한 값이 여러개인 경우에도..-->
            <input type="checkbox" name="favorite" value="의류" id="a1"> 
            <label for="a1">의류</label>
            <input type="checkbox" name="favorite" value="스포츠용품" id="a2"> 
            <label for="a2">스포츠용품</label>
            <input type="checkbox" name="favorite" value="식료품" id="a3"> 
            <label for="a3">식료품</label>
            <input type="checkbox" name="favorite" value="잡화" id="a4"> 
            <label for="a4">잡화</label>
            <input type="checkbox" name="favorite" value="전자제품" id="a5">
            <label for="a5">전자제품</label>

            <button>주문</button>






목록안에 목록 ->ul 안에 li..


















---
시험
화면 구현 능력단위 평가: 회원가입 페이지를 클론 코딩(참조 페이지 캡처 및 기재)으로 작성 또는 직접 스타일 작성해서 완성된 css, html 제출
시간: 2시간
제목, 입력 항목은 공통된 것으로 전달할 예정

html, css 확장팩 찾아보기

사람인 혹은 예전 네이버 회원가입창






--------------------------------------------

js

var
let
const









자바스크립트로 할 수 있는 것들
 html , css 로 만 작성된 정적인 웹컨텐츠에 대해 동적인 기능으로 컨텐츠를 조작할 수 있습니다.
 예를 들면 , 사용자가 입력한 값을 서버로 보내기 전에 유효한 값인지 검사하거나
 버튼이 클릭되었을 때 무엇을 할것인지에 대한 명령을 작성합니다.
자바스크립트는 브라우저가 실행환경. 개발자도구-콘솔에서 직접 명령어를 하나씩 실행하면서 결과 확인이 가능
자바스크립트의 기본 객체 자바스크립트는 브라우저의

1. window 객체 : 브라우저 창에 대한 객체
메소드 : alert , confirm  등
하위 객체 : document , console , history, location 등
프로퍼티 : innerWidth, innerHeight , screenX, screenY  등
메소드, 하위객체 등을 사용할 때 window는 생략하고 사용합니다.
예제 : 브라우저를 실행하여 다음 명령을 실행해 봅시다. 22+33 alert("hello~") confirm("실행하시겠습니까?") => '확인' 또는 '취소' 클릭하고 결과 확인하기 console.log('브라우저 콘솔 테스트합니다.') location.href='https://www.naver.com' -이동/location 객체는 브라우저의 url정보를 저장, href 속성으로 접근 history.back() ->브라우저의 웹페이지 이동에 대한 정보를 저장 window.innerWidth window.innerHeight => 전체 요소 선택한 후 크기값이 일치하는지 확인하기

2. document 객체 : 웹페이지(문서) 에 대한 객체 참고 : https://www.w3schools.com/jsref/prop_win_document.asp
주요 메소드
	getElementById				: 지정된 id로 요소를 가져오기. 리턴이 단일 요소
	getElementsByClassName		: 지정된 class 이름으로 요소들을 가져오기. 리턴이 배열(컬렉션) 형식 다중 요소
	getElmentsByTagName			: 지정된 tag 이름으로 요소들을 가져오기
	querySelector				: 선택자로 가져오기.단일 요소 가져오기. css 에서 사용한 선택자 기호 동일하게 작성.
	querySelectorAll			: 선택자로 가져오기. 여러개 요소 가져오기- 태그이름.클래스 이름 사용

하위객체	forms					: 웹문서에 포함된 form 객체들을 리턴.
프로퍼티	URL
현재 URL 문자열 가져오는 속성. document.URL
여기서부터는 웹문서에서 요소 가져오는 메소드 (자바스크립트에서 매우 중요) document.getElementById('lblEmail')
document.getElementsByTagName('input') document.querySelector('#lblAge') document.querySelectorAll('label') document.querySelectorAll('.location') ㄴ 클래스이름이 location 은 없습니다. document.forms document.forms[0] : form 들 중에서 0번 인덱스 가져오기

forms 객체로 가져올 때는 name 속성을 활용 document.forms[0].age : 지정된 form에서 name 속성이 age 가져오기 document.forms[0].age.value : 가져온 input 요소의 value document.forms[0].name.value

form 의 checkbox 요소는 배열입니다. document.forms[0].hobby document.forms[0].hobby[0].value => 요소 인덱스 지정해야 value 를 알수 있습니다. document.forms[0].hobby[1].value document.forms[0].hobby[2].value document.forms[0].hobby.value => '' 비교: radio 버튼 document.forms[0].gender => 요소들 배열 document.forms[0].gender.value => 선택한 값 리턴

html 요소의 내용을 바꾸기 document.forms[0].age.value = 32 document.forms[0].hobby[3].checked=false document.forms[0].address.value='기타'

문제 : 맨위의 '회원가입'제목 요소를 가져오려면? document.getElementsByTagName('h3') => 기본이 컬렉션(배열)을 리턴하는 메소드 document.querySelector('h3') => h3태그가 문서에 1개 있을 때만 querySelector 사용 document.querySelector('h3').innerHTML => h3태그의 콘텐츠(텍스트)

document.querySelector('h3').innerHTML = '회원 등록' +새로운 요소를 중첩시킬수도 있습니다. document.querySelector('h3').innerHTML = '테스트'

요소의 style 변경이 가능합니다. document.querySelector('h3').style.color = 'blue' document.querySelector('h3').style.border = '1px solid gray'







요소 식별 =id

document.getElementBy  ->자주쓸 명령어

document.getElementById('operand1')
-> <input id = "operand1" type ="text">
<input> 혼자쓰는 요소

-값가져오기
document.getElementById('operand1').value

-값 대입시키기
document.getElementById('operand1').value=n






-버튼 누르면 메소드 작동
<button id="executeBtn" onclick="calculate()">실행</button>
 ->() 주의!!

value값을 가져오면 무조건 string 이기에 +연산은 주의!
// 요소의 value 속성값을 가져오면 무조건 타입은 string
			switch(operator.value){
				case '+': 
				// +는 캐스팅안하고 할 수 있는 연산인 문자열 연결을 실행함
				//강제 캐스팅
					temp =Number(op1.value) + Number(op2.value)
					break;
				case '-':
					// 문자열을 연산에 맞게 자동 캐스팅함
					temp = op1.value - op2.value
					break;

-버튼 비활성화 코드
.disabled
        const bulb = document.getElementById('bulb')
        const on= document.getElementById('on')
        const off= document.getElementById('off')
        off.disabled = true

        function bulbon(){
            bulb.src="../image/KakaoTalk_20240213_160833779.gif"
            // 요소의 disable 속성을 설정 
            on.disabled = true      //비활성화
            off.disabled= false     //활성화
        }











